* , 
* ::after, 
* ::before { /*RESET before starting the css */
 margin: 0;
 padding: 0;
 box-sizing: border-box; 

}
html {
    font-size: 62.5%;
}
body { /* basics to inherit in every child */
    font-family: sans-serif;
    font-weight: 400;
    line-height: 1.7;
    color: #777;
    padding: 3rem;
}

.header{
    height: 95vh;
    background-image: linear-gradient(to right bottom, #42e9f5a5, #275ee8a9) /*linear gradient direction , start color - end color */
                        ,url(../img/hero.jpg); /* behaves as a stack first the img then the linear gradient */
    background-size: cover;  /* specifiy the size of the bg image ("auto", "cover" and "contain") */
    background-position: top; /* keeps our bg image sticked to the top so that while resizing it doesnot move */
    clip-path: polygon(0 0, 100% 0, 100% 80%, 0 100% ); /* allows us to clip the element using the co-ordinates*/

    position: relative;
}

.header__logo-box {
    position: absolute;
    top:4rem;
    left: 4rem;
}

.header__logo {
    height: 3.5rem;
    opacity: 0.8;
}

/*centering a div using position*/
.header__text-box{
    position: absolute;
    top: 40%; /* so this is 40% of the parent */
    left:50%;
    transform: translate(-50%, -40%); /*and this transform is from the center of the element itself*/
    text-align: center;
}

.heading-primary{
    color: #fff;
    text-transform: uppercase;
    backface-visibility: hidden; /**/
}

.heading-primary--main{
   font-size: 3rem;
   display: block;
   font-weight: 300;
   letter-spacing: 2rem;

   /* the below 2 are required to use key frame animation */
   animation-name: moveInLeft; 
   animation-duration: 1000ms;
   animation-timing-function: ease-out;
 
}


.heading-primary--sub {
    font-size: 1.5rem;
    display: block;
    font-weight: 200;
    letter-spacing: 0.70rem;

    animation-name: moveInRight; 
    animation-duration: 1000ms;
    animation-timing-function: ease-out;
}

@keyframes moveInLeft {
    0%{ /*this is the start of the animation*/
        opacity: 0;
        transform: translateX(-10rem);
    }
    80%{
        opacity: 1;
        transform:translateX(1rem)
    }
    /*we can have many multiple stages*/
    100%{ /*this is the end of the animation*/
        opacity: 1;
        transform: translateX(0);
    }

  
}


@keyframes moveInRight {
    0%{  
        opacity: 0;
        transform: translateX(10rem);
    } 
    80%{
        transform:translateX(-1rem);
    } 
    100%{  
        opacity: 1;
        transform: translateX(0);
    }

  
}

@keyframes moveInFromBottom {
    0%{  
        opacity: 0;
        transform: translateY(10rem);
    } 
    
    100%{  
        opacity: 1;
        transform: translateX(0);
    }

  
}

.btn:link ,
.btn:visited{ /* :link , :viisted etc are pseudo class selectors */
    text-transform: uppercase;
    text-decoration: none;
    padding: 1rem 2rem;
    margin-top: 2rem;
    display: inline-block;
    border-radius: 10rem;
    transition: all 200ms;
    position: relative;
}

.btn:hover{
    transform: translateY(-.3rem);
    box-shadow:  0 1rem 2rem rgba(0,0,0, 0.2); /* horizontal offset , vertical offset , blur and color */
}

.btn:active {
    transform:translatey(.1rem);
    box-shadow:  0 .5rem 1rem rgba(0,0,0, 0.2);
}

.btn--white{
    background-color: white;
    color:#777;
}

.btn::after{ /* after is special pseudo element which allows to style the element after the current class element*/
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 10rem;
    position: absolute;
    top:0;
    left:0;
    z-index: -1;

    transition:all 300ms;
}

.btn--white::after{
    background-color: white;
}

.btn:hover::after{
    transform: scaleX(1.5) scaleY(1);
    opacity: 0;
}

.btn--animated {
    animation-name: moveInFromBottom; 
    animation-duration: 1000ms;
    animation-fill-mode: backwards; /* by using this we implement the changes of this class before the other*/ 
}